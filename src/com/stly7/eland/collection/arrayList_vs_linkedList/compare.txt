不同点(功能特点不一样):
	ArrayList
		1.查询快,有序排列(底层实现是数组),然后通过MyStringBuffer实现方式一样,通过构造创建数组进行扩容
			数组:
				数组底层是通过静态方法进行的,传递一个类型  和  长度
					//componentType 数组的类型，length数组的长度
					public static Object newInstance(Class<?> componentType, int length) throws NegativeArraySizeException {
						return newArray(componentType, length); //这个方法会调用底层C代码开辟内存空间
					}
					//还有一个实体类就可以了.通过反射的机制传递进来
					剩下的增删改操作类似于MyStringBuffer
					
	LinkedList
		1.增删改快,链表结构,同样通过扩容的形式进添加列表
			链表:
				链表是通过实体类的方式进行的,设计的,设计方式有点类似与二叉树机制
					class Node {
						Node next = null;// 节点的引用，指向下一个节点
					    int data;// 节点的对象，即内容
					
					    public Node(int data) {
					        this.data = data;
					    }
					}
				剩下的操作类似于MyStringBuffer的增删改操作